{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"angular\"","webpack:///./datasource/kentikAPI.ts","webpack:///./config/config.ts","webpack:///./components/device_list.ts","webpack:///./components/device_details.ts","webpack:///./components/add_device.ts","webpack:///./module.ts","webpack:///./sass/kentik.dark.scss","webpack:///./sass/kentik.light.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","KentikAPI","backendSrv","this","baseUrl","$inject","resp","_a","sent","data","devices","getUsers","_get","getFieldValues","field","query","invokeSQLQuery","invokeTopXDataQuery","kentikV5Query","queries","bucketIndex","_post","url","datasourceRequest","method","catch","error","console","err","Promise","reject","then","response","showAlert","message","status","statusText","lodash__WEBPACK_IMPORTED_MODULE_1__","grafana_app_core_core__WEBPACK_IMPORTED_MODULE_0__","emit","KentikConfigCtrl","$scope","$injector","appEditCtrl","setPreUpdateHook","preUpdate","setPostUpdateHook","postUpdate","appModel","jsonData","secureJsonData","apiValidated","apiError","kentik","_datasource_kentikAPI__WEBPACK_IMPORTED_MODULE_1__","enabled","tokenSet","validateApiConnection","token","initDatasource","label","resolve","importDashboards","e_1","reset","email","self","results","foundKentic","ds","promises","push","post","type","access","all","DeviceListCtrl","$location","pageReady","_datasource_kentikAPI__WEBPACK_IMPORTED_MODULE_0__","_b","getDevices","refresh","gotoDashboard","device","path","search","var-device","device_name","gotoDeviceDetail","id","__webpack_exports__","DeviceDetailsCtrl","alertSrv","deviceDTO","getDevice","addIP","otherIps","ip","removeIP","index","splice","deviceId","_this","updateDeviceDTO","device_id","device_type","device_description","device_flow_type","device_sample_rate","parseInt","minimize_snmp","device_snmp_ip","device_snmp_community","device_bgp_type","device_bgp_password","device_bgp_neighbor_ip","device_bgp_neighbor_asn","update","put","set","AddDeviceCtrl","lodash__WEBPACK_IMPORTED_MODULE_0__","angular__WEBPACK_IMPORTED_MODULE_1__","angular__WEBPACK_IMPORTED_MODULE_1___default","defaults","sending_ips","a","copy","sendingIps","addDevice","ips","join","_config_config__WEBPACK_IMPORTED_MODULE_2__","_components_device_list__WEBPACK_IMPORTED_MODULE_3__","_components_device_details__WEBPACK_IMPORTED_MODULE_4__","_components_add_device__WEBPACK_IMPORTED_MODULE_5__","grafana_app_plugins_sdk__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"./module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { appEvents } from 'grafana/app/core/core';\n\nimport * as _ from 'lodash';\nimport angular from 'angular';\n\nexport class KentikAPI {\n  baseUrl: string;\n\n  /** @ngInject */\n  constructor(public backendSrv: any) {\n    this.baseUrl = 'api/plugin-proxy/kentik-app';\n  }\n\n  async getDevices() {\n    const resp = await this._get('/api/v5/devices');\n\n    if (resp.data && resp.data.devices) {\n      return resp.data.devices;\n    } else {\n      return [];\n    }\n  }\n\n  getUsers() {\n    return this._get('/api/v5/users');\n  }\n\n  getFieldValues(field: string) {\n    const query = `SELECT DISTINCT ${field} FROM all_devices ORDER BY ${field} ASC`;\n    return this.invokeSQLQuery(query);\n  }\n\n  async getCustomDimensions() {\n    const data = await this._get('/api/v5/customdimensions');\n    return data.data.customDimensions;\n  }\n\n  async getSavedFilters() {\n    const data = await this._get('/api/v5/saved-filters');\n    return data.data;\n  }\n\n  invokeTopXDataQuery(query: any) {\n    const kentikV5Query = {\n      queries: [{ query: query, bucketIndex: 0 }],\n    };\n\n    return this._post('/api/v5/query/topXdata', kentikV5Query);\n  }\n\n  invokeSQLQuery(query: any) {\n    const data = {\n      query: query,\n    };\n\n    return this._post('/api/v5/query/sql', data);\n  }\n\n  _get(url: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        method: 'GET',\n        url: this.baseUrl + url,\n      })\n      .catch(error => {\n        console.error(error);\n        if (error.err) {\n          return Promise.reject(error.err);\n        } else {\n          return Promise.reject(error);\n        }\n      });\n  }\n\n  _post(url: string, data: any) {\n    return this.backendSrv\n      .datasourceRequest({\n        method: 'POST',\n        url: this.baseUrl + url,\n        data: data,\n      })\n      .then(response => {\n        if (response.data) {\n          return response.data;\n        } else {\n          return [];\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        if (error.err) {\n          return Promise.reject(error.err);\n        } else {\n          return Promise.reject(error);\n        }\n      });\n  }\n}\n\nexport function showAlert(error) {\n  let message = '';\n  message += error.status ? `(${error.status}) ` : '';\n  message += error.statusText ? error.statusText + ': ' : '';\n  if (error.data && error.data.error) {\n    message += error.data.error;\n  } else if (error.err) {\n    message += error.err;\n  } else if (_.isString(error)) {\n    message += error;\n  }\n\n  appEvents.emit('alert-error', [\"Can't connect to Kentik API\", message]);\n}\n\nangular.module('grafana.services').service('kentikAPISrv', KentikAPI);\n","import configTemplate from './config.html';\nimport { KentikAPI, showAlert } from '../datasource/kentikAPI';\n\nimport * as _ from 'lodash';\n\nclass KentikConfigCtrl {\n  appEditCtrl: any;\n  appModel: any;\n  apiValidated: boolean;\n  apiError: boolean;\n  kentik: KentikAPI;\n  static template: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, public backendSrv: any) {\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (!this.appModel.jsonData) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.secureJsonData) {\n      this.appModel.secureJsonData = {};\n    }\n    this.apiValidated = false;\n    this.apiError = false;\n    this.kentik = new KentikAPI(this.backendSrv);\n    if (this.appModel.enabled && this.appModel.jsonData.tokenSet) {\n      this.validateApiConnection();\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.token) {\n      this.appModel.jsonData.tokenSet = true;\n    }\n\n    return this.initDatasource();\n  }\n\n  async postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n\n    await this.validateApiConnection();    \n    await this.appEditCtrl.importDashboards();\n\n    return {\n      url: 'dashboard/db/kentik-home',\n      message: 'Kentik Connect Pro app installed!',\n    };\n  }\n\n  // make sure that we can hit the Kentik API.\n  async validateApiConnection() {\n    try {\n      await this.kentik.getUsers();\n      this.apiValidated = true;\n    } catch (e) {\n      showAlert(e);\n      this.apiValidated = false;\n      this.apiError = true;\n    }\n  }\n\n  reset() {\n    this.appModel.jsonData.email = '';\n    this.appModel.jsonData.tokenSet = false;\n    this.appModel.secureJsonData = {};\n    this.apiValidated = false;\n  }\n\n  initDatasource() {\n    const self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(results => {\n      let foundKentic = false;\n      _.forEach(results, ds => {\n        if (foundKentic) {\n          return;\n        }\n        if (ds.name === 'kentik') {\n          foundKentic = true;\n        }\n      });\n      const promises = [];\n      if (!foundKentic) {\n        // create datasource.\n        const kentik = {\n          name: 'kentik',\n          type: 'kentik-ds',\n          access: 'direct',\n          jsonData: {},\n        };\n        promises.push(self.backendSrv.post('/api/datasources', kentik));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nKentikConfigCtrl.template = configTemplate;\n\nexport { KentikConfigCtrl as ConfigCtrl };\n","import { KentikAPI, showAlert } from '../datasource/kentikAPI';\n\nclass DeviceListCtrl {\n  static templateUrl: string;\n  devices: any[];\n  pageReady: boolean;\n  kentik: KentikAPI;\n\n  /** @ngInject */\n  constructor(private $scope, $injector, public $location: any, public backendSrv: any) {\n    this.devices = [];\n    this.pageReady = false;\n    this.kentik = new KentikAPI(this.backendSrv);\n    this.getDevices();\n  }\n\n  async getDevices() {\n    try {\n      this.devices = await this.kentik.getDevices();\n      this.pageReady = true;\n\n      this.$scope.$apply();\n    } catch (e) {\n      showAlert(e);\n    }\n  }\n\n  refresh() {\n    this.getDevices();\n  }\n\n  gotoDashboard(device) {\n    this.$location.path('/dashboard/db/kentik-top-talkers').search({ 'var-device': device.device_name });\n  }\n\n  gotoDeviceDetail(device) {\n    this.$location.url('/plugins/kentik-app/page/device-details?device=' + device.id);\n  }\n}\n\nDeviceListCtrl.templateUrl = 'components/device_list.html';\n\nexport { DeviceListCtrl };\n","export class DeviceDetailsCtrl {\n  static templateUrl: string;\n  device: any;\n  deviceDTO: any;\n  pageReady: boolean;\n  otherIps: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, public $location: any, public backendSrv: any, public alertSrv: any) {\n    this.device = {};\n    this.deviceDTO = {};\n    this.pageReady = false;\n    this.getDevice($location.search().device);\n  }\n\n  addIP() {\n    this.otherIps.push({ ip: '' });\n  }\n\n  removeIP(index) {\n    this.otherIps.splice(index, 1);\n  }\n\n  getDevice(deviceId) {\n    this.backendSrv.get('/api/plugin-proxy/kentik-app/api/v5/device/' + deviceId).then(resp => {\n      this.device = resp.device;\n      this.updateDeviceDTO();\n      this.pageReady = true;\n    });\n  }\n\n  gotoDashboard(device_name) {\n    this.$location.url('/dashboard/db/kentik-top-talkers?var-device=' + device_name);\n  }\n\n  updateDeviceDTO() {\n    this.deviceDTO = {\n      device_id: this.device.id,\n      device_name: this.device.device_name,\n      device_type: this.device.device_type,\n      device_description: this.device.device_description,\n      device_flow_type: this.device.device_flow_type,\n      device_sample_rate: parseInt(this.device.device_sample_rate, 10),\n      minimize_snmp: this.device.minimize_snmp,\n      device_snmp_ip: this.device.device_snmp_ip,\n      device_snmp_community: this.device.device_snmp_community,\n      device_bgp_type: this.device.device_bgp_type,\n      device_bgp_password: this.device.device_bgp_password,\n      device_bgp_neighbor_ip: this.device.device_bgp_neighbor_ip,\n      device_bgp_neighbor_asn: parseInt(this.device.device_bgp_neighbor_asn, 10),\n    };\n  }\n\n  update() {\n    if (!this.deviceDTO.device_snmp_ip) {\n      delete this.deviceDTO.device_snmp_ip;\n    }\n    if (!this.deviceDTO.device_snmp_community) {\n      delete this.deviceDTO.device_snmp_community;\n    }\n    const data = { device: this.deviceDTO };\n\n    this.backendSrv.put('/api/plugin-proxy/kentik-app/api/v5/device/' + this.deviceDTO.device_id, data).then(\n      resp => {\n        if ('err' in resp) {\n          this.alertSrv.set('Device Update failed.', resp.err, 'error');\n        } else {\n          this.alertSrv.set('Device Updated.', this.deviceDTO.device_name, 'success', 3000);\n          return this.getDevice(this.deviceDTO.device_id);\n        }\n      },\n      error => {\n        if ('error' in error.data) {\n          this.alertSrv.set('Device Update failed.', error.data.error, 'error');\n        } else {\n          this.alertSrv.set('Device Update failed.', error, 'error');\n        }\n      }\n    );\n  }\n}\n\nDeviceDetailsCtrl.templateUrl = 'components/device_details.html';\n","import * as _ from 'lodash';\nimport angular from 'angular';\n\nconst defaults = {\n  device_name: '',\n  device_type: 'router',\n  device_description: '',\n  device_flow_type: 'sflow',\n  device_sample_rate: 5,\n  sending_ips: '',\n  minimize_snmp: false,\n  device_bgp_type: 'none',\n  device_snmp_ip: '',\n  device_snmp_community: '',\n};\n\nexport class AddDeviceCtrl {\n  static templateUrl: string;\n  device: any;\n  sendingIps: any[];\n\n  /** @ngInject */\n  constructor($scope, $injector, public $location: any, public backendSrv: any, public alertSrv: any) {\n    this.device = angular.copy(defaults);\n    this.sendingIps = [{ ip: '' }];\n  }\n\n  addIP() {\n    this.sendingIps.push({ ip: '' });\n  }\n\n  removeIP(index) {\n    this.sendingIps.splice(index, 1);\n  }\n\n  addDevice() {\n    const ips = [];\n    _.forEach(this.sendingIps, ip => {\n      ips.push(ip.ip);\n    });\n    this.device.sending_ips = ips.join();\n    this.backendSrv.post('/api/plugin-proxy/kentik-app/api/v5/device', this.device).then(resp => {\n      if ('err' in resp) {\n        this.alertSrv.set('Device Add failed.', resp.err, 'error');\n      } else {\n        this.$location.url('/plugins/kentik-app/page/device-list');\n      }\n    });\n  }\n}\n\nAddDeviceCtrl.templateUrl = 'components/add_device.html';\n","import './sass/kentik.dark.scss';\nimport './sass/kentik.light.scss';\n\nimport { ConfigCtrl } from './config/config';\nimport { DeviceListCtrl } from './components/device_list';\nimport { DeviceDetailsCtrl } from './components/device_details';\nimport { AddDeviceCtrl } from './components/add_device';\nimport { loadPluginCss } from 'grafana/app/plugins/sdk';\n\nloadPluginCss({\n  dark: 'plugins/kentik-app/css/kentik.dark.css',\n  light: 'plugins/kentik-app/css/kentik.light.css',\n});\n\nexport { DeviceListCtrl, DeviceDetailsCtrl, AddDeviceCtrl, ConfigCtrl };\n","// removed by extract-text-webpack-plugin","// removed by extract-text-webpack-plugin"],"sourceRoot":""}