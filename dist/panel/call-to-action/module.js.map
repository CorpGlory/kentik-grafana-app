{"version":3,"sources":["../../../src/panel/call-to-action/module.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO;;AACC;AACA;;;;;;;;;;;;;;;;;;;;;AAER,oBAAc;AACZ,cAAM,iCAAN;AACA,eAAO,kCAAP;OAFF;;AAKI,sBAAgB;AAChB,oBAAY,IAAZ;;;2BAGE;;;;;AAEJ,iBAFI,iBAEJ,CAAY,MAAZ,EAAoB,SAApB,EAA+B,EAA/B,EAAmC,UAAnC,EAA+C;gCAF3C,mBAE2C;;6EAF3C,8BAGI,QAAQ,YAD+B;;AAE7C,gBAAK,EAAL,GAAU,EAAV,CAF6C;AAG7C,gBAAK,UAAL,GAAkB,UAAlB,CAH6C;AAI7C,gBAAK,YAAL,GAAoB,EAApB,CAJ6C;AAK7C,gBAAK,OAAL,GAAe,KAAf,CAL6C;AAM7C,gBAAK,aAAL,GAN6C;AAO7C,YAAE,QAAF,CAAW,MAAK,KAAL,EAAY,aAAvB,EAP6C;;SAA/C;;qBAFI;;0CAYY;AACd,gBAAI,OAAO,IAAP,CADU;AAEd,iBAAK,EAAL,CAAQ,GAAR,CAAY,CACV,KAAK,UAAL,EADU,CAAZ,EAEG,IAFH,CAEQ,YAAW;AACjB,kBAAI,KAAK,YAAL,KAAsB,YAAtB,EAAoC;AACtC,qBAAK,OAAL,GAAe,IAAf,CADsC;eAAxC,MAEO;AACL,qBAAK,OAAL,GAAe,KAAf,CADK;eAFP;aADM,CAFR,CAFc;;;;uCAaH;AACX,gBAAI,OAAO,IAAP,CADO;AAEX,mBAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,8CAApB,EAAoE,IAApE,CAAyE,UAAS,IAAT,EAAe;AAC7F,kBAAI,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAArB,EAAwB;AAC1B,qBAAK,YAAL,GAAoB,YAApB,CAD0B;eAA5B,MAEO;AACL,qBAAK,YAAL,GAAoB,WAApB,CADK;eAFP;aAD8E,CAAhF,CAFW;;;;oCAWH;AACR,iBAAK,aAAL,GADQ;;;;eApCN;QAA0B;;AAyChC,wBAAkB,WAAlB,GAAgC,kCAAhC;;2BAEQ","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\nloadPluginCss({\n  dark: 'plugins/kentik-app/css/dark.css',\n  light: 'plugins/kentik-app/css/light.css'\n});\n\nvar panelDefaults = {\n    fullscreen: true\n};\n\nclass CallToActiontCtrl extends PanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $q, backendSrv) {\n    super($scope, $injector);\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.deviceStatus = '';\n    this.AllDone = false\n    this.getTaskStatus();\n    _.defaults(this.panel, panelDefaults);\n  }\n\n  getTaskStatus() {\n    var self = this;\n    this.$q.all([\n      self.getDevices()\n    ]).then(function() {\n      if (self.deviceStatus === 'hasDevices') {\n        self.AllDone = true;\n      } else {\n        self.AllDone = false;\n      }\n    });\n  }\n\n  getDevices() {\n    var self = this;\n    return this.backendSrv.get(\"/api/plugin-proxy/kentik-app/api/device/list\").then(function(resp) {\n      if (resp.device.length > 0) {\n        self.deviceStatus = 'hasDevices';\n      } else {\n        self.deviceStatus = 'noDevices';\n      }\n    });\n  }\n\n  refresh() {\n    this.getTaskStatus()\n  }\n}\n\nCallToActiontCtrl.templateUrl = 'panel/call-to-action/module.html';\n\nexport {CallToActiontCtrl as PanelCtrl}\n\n"]}