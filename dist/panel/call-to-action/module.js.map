{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"angular\"","webpack:///./datasource/kentikAPI.ts","webpack:///./panel/call-to-action/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","KentikAPI","backendSrv","this","baseUrl","$inject","resp","_a","sent","data","devices","getUsers","_get","getFieldValues","field","query","invokeSQLQuery","invokeTopXDataQuery","kentikV5Query","queries","bucketIndex","_post","url","datasourceRequest","method","catch","error","console","err","Promise","reject","then","response","showAlert","message","status","statusText","lodash__WEBPACK_IMPORTED_MODULE_1__","grafana_app_core_core__WEBPACK_IMPORTED_MODULE_0__","emit","grafana_app_plugins_sdk__WEBPACK_IMPORTED_MODULE_1__","dark","light","panelDefaults","fullscreen","CallToActiontCtrl","_super","$scope","$injector","_this","deviceStatus","allDone","kentik","_datasource_kentikAPI__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_2__","panel","__extends","getDevices","length","refresh","getTaskStatus"],"mappings":"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","file":"panel/call-to-action/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { appEvents } from 'grafana/app/core/core';\n\nimport * as _ from 'lodash';\nimport angular from 'angular';\n\nexport class KentikAPI {\n  baseUrl: string;\n\n  /** @ngInject */\n  constructor(public backendSrv: any) {\n    this.baseUrl = 'api/plugin-proxy/kentik-app';\n  }\n\n  async getDevices() {\n    const resp = await this._get('/api/v5/devices');\n\n    if (resp.data && resp.data.devices) {\n      return resp.data.devices;\n    } else {\n      return [];\n    }\n  }\n\n  getUsers() {\n    return this._get('/api/v5/users');\n  }\n\n  getFieldValues(field: string) {\n    const query = `SELECT DISTINCT ${field} FROM all_devices ORDER BY ${field} ASC`;\n    return this.invokeSQLQuery(query);\n  }\n\n  async getCustomDimensions() {\n    const data = await this._get('/api/v5/customdimensions');\n    return data.data.customDimensions;\n  }\n\n  async getSavedFilters() {\n    const data = await this._get('/api/v5/saved-filters');\n    return data.data;\n  }\n\n  invokeTopXDataQuery(query: any) {\n    const kentikV5Query = {\n      queries: [{ query: query, bucketIndex: 0 }],\n    };\n\n    return this._post('/api/v5/query/topXdata', kentikV5Query);\n  }\n\n  invokeSQLQuery(query: any) {\n    const data = {\n      query: query,\n    };\n\n    return this._post('/api/v5/query/sql', data);\n  }\n\n  _get(url: string) {\n    return this.backendSrv\n      .datasourceRequest({\n        method: 'GET',\n        url: this.baseUrl + url,\n      })\n      .catch(error => {\n        console.error(error);\n        if (error.err) {\n          return Promise.reject(error.err);\n        } else {\n          return Promise.reject(error);\n        }\n      });\n  }\n\n  _post(url: string, data: any) {\n    return this.backendSrv\n      .datasourceRequest({\n        method: 'POST',\n        url: this.baseUrl + url,\n        data: data,\n      })\n      .then(response => {\n        if (response.data) {\n          return response.data;\n        } else {\n          return [];\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        if (error.err) {\n          return Promise.reject(error.err);\n        } else {\n          return Promise.reject(error);\n        }\n      });\n  }\n}\n\nexport function showAlert(error) {\n  let message = '';\n  message += error.status ? `(${error.status}) ` : '';\n  message += error.statusText ? error.statusText + ': ' : '';\n  if (error.data && error.data.error) {\n    message += error.data.error;\n  } else if (error.err) {\n    message += error.err;\n  } else if (_.isString(error)) {\n    message += error;\n  }\n\n  appEvents.emit('alert-error', [\"Can't connect to Kentik API\", message]);\n}\n\nangular.module('grafana.services').service('kentikAPISrv', KentikAPI);\n","import { KentikAPI, showAlert } from '../../datasource/kentikAPI';\nimport { PanelCtrl, loadPluginCss } from 'grafana/app/plugins/sdk';\n\nimport * as _ from 'lodash';\n\nloadPluginCss({\n  dark: 'plugins/kentik-app/css/kentik.dark.css',\n  light: 'plugins/kentik-app/css/kentik.light.css',\n});\n\nconst panelDefaults = {\n  fullscreen: true,\n};\n\nclass CallToActiontCtrl extends PanelCtrl {\n  static templateUrl: string;\n  deviceStatus: string;\n  allDone: boolean;\n  kentik: KentikAPI;\n\n  /** @ngInject */\n  constructor($scope, $injector, public backendSrv: any) {\n    super($scope, $injector);\n    this.deviceStatus = '';\n    this.allDone = false;\n    this.kentik = new KentikAPI(this.backendSrv);\n    this.getTaskStatus();\n    _.defaults(this.panel, panelDefaults);\n  }\n\n  async getTaskStatus() {\n    await this.getDevices();\n\n    if (this.deviceStatus === 'hasDevices') {\n      this.allDone = true;\n    } else {\n      this.allDone = false;\n    }\n  }\n\n  async getDevices() {\n    try {\n      const devices = await this.kentik.getDevices();\n\n      if (devices.length > 0) {\n        this.deviceStatus = 'hasDevices';\n      } else {\n        this.deviceStatus = 'noDevices';\n      }\n    } catch (e) {\n      showAlert(e);\n    }\n  }\n\n  refresh() {\n    this.getTaskStatus();\n  }\n}\n\nCallToActiontCtrl.templateUrl = 'panel/call-to-action/module.html';\nexport { CallToActiontCtrl as PanelCtrl };\n"],"sourceRoot":""}