{"version":3,"sources":["../../src/components/device_details.js"],"names":["_","DeviceDetailsCtrl","$scope","$injector","$location","backendSrv","alertSrv","device","deviceDTO","pageReady","getDevice","search","other_ips","push","ip","index","splice","deviceId","self","get","then","resp","updateDeviceDTO","device_name","url","device_id","id","type","device_type","device_description","flow_type","device_flow_type","flow_rate","parseInt","device_sample_rate","device_chf_interface","minimize_snmp","device_ip","device_snmp_ip","snmp_community","device_snmp_community","forEach","split","ips","join","post","set","err","templateUrl"],"mappings":"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","file":"device_details.js","sourcesContent":["import _ from 'lodash';\n\nexport class DeviceDetailsCtrl {\n\n\t/** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, alertSrv) {\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$location = $location;\n    this.device = {};\n    this.deviceDTO = {};\n    this.pageReady = false;\n    this.getDevice($location.search().device);\n  }\n\n  addIP() {\n    this.other_ips.push({ip: ''});\n  }\n\n  removeIP(index) {\n    this.other_ips.splice(index, 1);\n  }\n\n  getDevice(deviceId) {\n    var self = this;\n    this.backendSrv.get(\"/api/plugin-proxy/kentik-app/api/v1/device/\"+deviceId).then(function(resp) {\n      self.device = resp.device[0];\n      self.updateDeviceDTO();\n      self.pageReady = true;\n    });\n  }\n\n  gotoDashboard(device_name) {\n    this.$location.url(\"/dashboard/db/kentik-top-talkers?var-device=\"+device_name);\n  }\n\n  updateDeviceDTO() {\n    var self = this;\n    this.deviceDTO = {\n      device_id: this.device.id,\n      device_name: this.device.device_name,\n      type: this.device.device_type,\n      device_description: this.device.device_description,\n      flow_type: this.device.device_flow_type,\n      flow_rate: parseInt(this.device.device_sample_rate),\n      other_ips: this.device.device_chf_interface,\n      minimize_snmp: this.device.minimize_snmp,\n      device_ip: this.device.device_snmp_ip,\n      snmp_community: this.device.device_snmp_community,\n    };\n    this.other_ips = [];\n    _.forEach(this.deviceDTO.other_ips.split(','), function(ip) {\n      self.other_ips.push({ip: ip});\n    });\n  }\n\n  update() {\n    var self = this;\n    var ips = [];\n    _.forEach(this.other_ips, function(ip) {\n      ips.push(ip.ip);\n    });\n    if (!this.deviceDTO.device_ip) {\n      delete this.deviceDTO.device_ip;\n    }\n    if (!this.deviceDTO.snmp_community) {\n      delete this.deviceDTO.snmp_community;\n    }\n\n    this.deviceDTO.other_ips = ips.join();\n    this.backendSrv.post(\"/api/plugin-proxy/kentik-app/api/v1/device/\"+this.deviceDTO.device_id, this.deviceDTO).then((resp) => {\n      if ('err' in resp) {\n        this.alertSrv.set(\"Device Update failed.\", resp.err, 'error');\n      } else {\n        return self.getDevice(self.deviceDTO.device_id);\n      }\n    });\n  }\n}\n\nDeviceDetailsCtrl.templateUrl = 'components/device_details.html';\n"]}