define(["lodash","angular"],function(e,t){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(t,n){t.exports=e},function(e,t,n){"use strict";function i(e){var t="default";for(var n in e)if("kentik-ds"===e[n].type)return t=e[n].jsonData.region;return t}n.d(t,"a",function(){return i})},function(e,n){e.exports=t},,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"AddDeviceCtrl",function(){return s});var i=n(0),r=n(2),o=n.n(r),c=n(1),u={device_name:"",device_type:"router",device_description:"",device_flow_type:"sflow",device_sample_rate:5,sending_ips:"",minimize_snmp:!1,device_bgp_type:"none",device_snmp_ip:"",device_snmp_community:""},s=function(){function e(e,t,n,i,r){var s=this;this.$location=n,this.backendSrv=i,this.alertSrv=r,this.device=o.a.copy(u),this.sendingIps=[{ip:""}],this.region="default",i.get("/api/datasources").then(function(e){s.region=Object(c.a)(e)})}return e.$inject=["$scope","$injector","$location","backendSrv","alertSrv"],e.prototype.addIP=function(){this.sendingIps.push({ip:""})},e.prototype.removeIP=function(e){this.sendingIps.splice(e,1)},e.prototype.addDevice=function(){var e=this,t=[];i.forEach(this.sendingIps,function(e){t.push(e.ip)}),this.device.sending_ips=t.join(),this.backendSrv.post("/api/plugin-proxy/kentik-app/"+this.region+"/api/v5/device",this.device).then(function(t){"err"in t?e.alertSrv.set("Device Add failed.",t.err,"error"):e.$location.url("/plugins/kentik-app/page/device-list")})},e}();s.templateUrl="components/add_device.html"}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibG9kYXNoXCIiLCJ3ZWJwYWNrOi8vLy4vZGF0YXNvdXJjZS9yZWdpb25IZWxwZXIudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYW5ndWxhclwiIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYWRkX2RldmljZS50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIl9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXyIsImdldFJlZ2lvbiIsImRhdGFzb3VyY2VzIiwiYVJlZ2lvbiIsImluZGV4IiwidHlwZSIsImpzb25EYXRhIiwicmVnaW9uIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIl9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXyIsIkFkZERldmljZUN0cmwiLCJsb2Rhc2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImFuZ3VsYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImFuZ3VsYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0IiwiX2RhdGFzb3VyY2VfcmVnaW9uSGVscGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJkZWZhdWx0cyIsImRldmljZV9uYW1lIiwiZGV2aWNlX3R5cGUiLCJkZXZpY2VfZGVzY3JpcHRpb24iLCJkZXZpY2VfZmxvd190eXBlIiwiZGV2aWNlX3NhbXBsZV9yYXRlIiwic2VuZGluZ19pcHMiLCJtaW5pbWl6ZV9zbm1wIiwiZGV2aWNlX2JncF90eXBlIiwiZGV2aWNlX3NubXBfaXAiLCJkZXZpY2Vfc25tcF9jb21tdW5pdHkiLCIkc2NvcGUiLCIkaW5qZWN0b3IiLCIkbG9jYXRpb24iLCJiYWNrZW5kU3J2IiwiYWxlcnRTcnYiLCJfdGhpcyIsInRoaXMiLCJkZXZpY2UiLCJhIiwiY29weSIsInNlbmRpbmdJcHMiLCJpcCIsInRoZW4iLCJhbGxEUyIsIiRpbmplY3QiLCJhZGRJUCIsInB1c2giLCJyZW1vdmVJUCIsInNwbGljZSIsImFkZERldmljZSIsImlwcyIsImpvaW4iLCJwb3N0IiwicmVzcCIsInNldCIsImVyciIsInVybCJdLCJtYXBwaW5ncyI6IjZEQUNBLElBQUFBLEVBQUEsR0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxHQUFBLENBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsUUFBQSxJQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUEwREEsT0FyREFGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFB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QUFBLFNBRUFwQixFQUFBSCxVQUFBd0IsSUFBQSwyQ0FHTjFDLEVBdkNEIiwiZmlsZSI6ImNvbXBvbmVudHMvYWRkX2RldmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiLCIgLyoqXG4gICogUmV0dXJucyB0aGUgcmVnaW9uIGFzc29jaWF0ZWQgd2l0aCB0aGUga2VudGlrLWtzXG5cbiAgKiBAcGFyYW0gZGF0YXNvdXJjZXMgXG4gICovXG5mdW5jdGlvbiBnZXRSZWdpb24oZGF0YXNvdXJjZXM6IGFueSk6IHN0cmluZyB7XG4gIGxldCBhUmVnaW9uID0gXCJkZWZhdWx0XCI7XG4gIGZvciAodmFyIGluZGV4IGluIGRhdGFzb3VyY2VzKSB7XG4gICAgaWYgKGRhdGFzb3VyY2VzW2luZGV4XS50eXBlID09PSBcImtlbnRpay1kc1wiKSB7XG4gICAgICAvL2NvbnNvbGUubG9nKFwiZ2V0UmVnaW9uOiBmb3VuZCByZWdpb246IFwiICtkYXRhc291cmNlc1tpbmRleF0uanNvbkRhdGEucmVnaW9uKTtcbiAgICAgIC8vY29uc29sZS5sb2coYWxsRFNbaW5kZXhdKTtcbiAgICAgIGFSZWdpb24gPSBkYXRhc291cmNlc1tpbmRleF0uanNvbkRhdGEucmVnaW9uO1xuICAgICAgcmV0dXJuIGFSZWdpb247XG4gICAgfVxuICB9XG4gIHJldHVybiBhUmVnaW9uO1xufVxuXG5leHBvcnQgeyBnZXRSZWdpb24gfVxuIiwibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yX187IiwiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGFuZ3VsYXIgZnJvbSAnYW5ndWxhcic7XG5pbXBvcnQgeyBnZXRSZWdpb24gfSBmcm9tIFwiLi4vZGF0YXNvdXJjZS9yZWdpb25IZWxwZXJcIjtcblxuY29uc3QgZGVmYXVsdHMgPSB7XG4gIGRldmljZV9uYW1lOiAnJyxcbiAgZGV2aWNlX3R5cGU6ICdyb3V0ZXInLFxuICBkZXZpY2VfZGVzY3JpcHRpb246ICcnLFxuICBkZXZpY2VfZmxvd190eXBlOiAnc2Zsb3cnLFxuICBkZXZpY2Vfc2FtcGxlX3JhdGU6IDUsXG4gIHNlbmRpbmdfaXBzOiAnJyxcbiAgbWluaW1pemVfc25tcDogZmFsc2UsXG4gIGRldmljZV9iZ3BfdHlwZTogJ25vbmUnLFxuICBkZXZpY2Vfc25tcF9pcDogJycsXG4gIGRldmljZV9zbm1wX2NvbW11bml0eTogJycsXG59O1xuXG5leHBvcnQgY2xhc3MgQWRkRGV2aWNlQ3RybCB7XG4gIHN0YXRpYyB0ZW1wbGF0ZVVybDogc3RyaW5nO1xuICBkZXZpY2U6IGFueTtcbiAgc2VuZGluZ0lwczogYW55W107XG4gIHJlZ2lvbjogc3RyaW5nO1xuXG4gIC8qKiBAbmdJbmplY3QgKi9cbiAgY29uc3RydWN0b3IoJHNjb3BlLCAkaW5qZWN0b3IsIHB1YmxpYyAkbG9jYXRpb246IGFueSwgcHVibGljIGJhY2tlbmRTcnY6IGFueSwgcHVibGljIGFsZXJ0U3J2OiBhbnkpIHtcbiAgICB0aGlzLmRldmljZSA9IGFuZ3VsYXIuY29weShkZWZhdWx0cyk7XG4gICAgdGhpcy5zZW5kaW5nSXBzID0gW3sgaXA6ICcnIH1dO1xuICAgIC8vIGdldCByZWdpb24gZnJvbSBkYXRhc291cmNlXG4gICAgdGhpcy5yZWdpb24gPSBcImRlZmF1bHRcIjtcbiAgICBiYWNrZW5kU3J2LmdldCgnL2FwaS9kYXRhc291cmNlcycpLnRoZW4oIChhbGxEUzogYW55KSA9PiB7XG4gICAgICB0aGlzLnJlZ2lvbiA9IGdldFJlZ2lvbihhbGxEUyk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJUCgpIHtcbiAgICB0aGlzLnNlbmRpbmdJcHMucHVzaCh7IGlwOiAnJyB9KTtcbiAgfVxuXG4gIHJlbW92ZUlQKGluZGV4KSB7XG4gICAgdGhpcy5zZW5kaW5nSXBzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cblxuICBhZGREZXZpY2UoKSB7XG4gICAgY29uc3QgaXBzID0gW107XG4gICAgXy5mb3JFYWNoKHRoaXMuc2VuZGluZ0lwcywgaXAgPT4ge1xuICAgICAgaXBzLnB1c2goaXAuaXApO1xuICAgIH0pO1xuICAgIHRoaXMuZGV2aWNlLnNlbmRpbmdfaXBzID0gaXBzLmpvaW4oKTtcbiAgICB0aGlzLmJhY2tlbmRTcnYucG9zdChgL2FwaS9wbHVnaW4tcHJveHkva2VudGlrLWFwcC8ke3RoaXMucmVnaW9ufS9hcGkvdjUvZGV2aWNlYCwgdGhpcy5kZXZpY2UpLnRoZW4ocmVzcCA9PiB7XG4gICAgICBpZiAoJ2VycicgaW4gcmVzcCkge1xuICAgICAgICB0aGlzLmFsZXJ0U3J2LnNldCgnRGV2aWNlIEFkZCBmYWlsZWQuJywgcmVzcC5lcnIsICdlcnJvcicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy4kbG9jYXRpb24udXJsKCcvcGx1Z2lucy9rZW50aWstYXBwL3BhZ2UvZGV2aWNlLWxpc3QnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5BZGREZXZpY2VDdHJsLnRlbXBsYXRlVXJsID0gJ2NvbXBvbmVudHMvYWRkX2RldmljZS5odG1sJztcbiJdLCJzb3VyY2VSb290IjoiIn0=