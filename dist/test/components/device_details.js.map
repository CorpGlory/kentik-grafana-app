{"version":3,"sources":["../../../src/components/device_details.js"],"names":["DeviceDetailsCtrl","$scope","$injector","$location","backendSrv","alertSrv","device","deviceDTO","pageReady","getDevice","search","other_ips","push","ip","index","splice","deviceId","get","then","resp","updateDeviceDTO","device_name","url","device_id","id","device_type","device_description","device_flow_type","device_sample_rate","parseInt","minimize_snmp","device_snmp_ip","device_snmp_community","device_bgp_type","device_bgp_password","device_bgp_neighbor_ip","device_bgp_neighbor_asn","data","put","set","err","error","templateUrl"],"mappings":"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","file":"device_details.js","sourcesContent":["export class DeviceDetailsCtrl {\n\n\t/** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, alertSrv) {\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$location = $location;\n    this.device = {};\n    this.deviceDTO = {};\n    this.pageReady = false;\n    this.getDevice($location.search().device);\n  }\n\n  addIP() {\n    this.other_ips.push({ip: ''});\n  }\n\n  removeIP(index) {\n    this.other_ips.splice(index, 1);\n  }\n\n  getDevice(deviceId) {\n    this.backendSrv.get(\"/api/plugin-proxy/kentik-app/api/v5/device/\" + deviceId)\n      .then(resp => {\n        this.device = resp.device;\n        this.updateDeviceDTO();\n        this.pageReady = true;\n      });\n  }\n\n  gotoDashboard(device_name) {\n    this.$location.url(\"/dashboard/db/kentik-top-talkers?var-device=\" + device_name);\n  }\n\n  updateDeviceDTO() {\n    this.deviceDTO = {\n      device_id: this.device.id,\n      device_name: this.device.device_name,\n      device_type: this.device.device_type,\n      device_description: this.device.device_description,\n      device_flow_type: this.device.device_flow_type,\n      device_sample_rate: parseInt(this.device.device_sample_rate),\n      minimize_snmp: this.device.minimize_snmp,\n      device_snmp_ip:        this.device.device_snmp_ip,\n      device_snmp_community: this.device.device_snmp_community,\n      device_bgp_type:         this.device.device_bgp_type,\n      device_bgp_password:     this.device.device_bgp_password,\n      device_bgp_neighbor_ip:  this.device.device_bgp_neighbor_ip,\n      device_bgp_neighbor_asn: parseInt(this.device.device_bgp_neighbor_asn)\n    };\n  }\n\n  update() {\n    if (!this.deviceDTO.device_snmp_ip) {\n      delete this.deviceDTO.device_snmp_ip;\n    }\n    if (!this.deviceDTO.device_snmp_community) {\n      delete this.deviceDTO.device_snmp_community;\n    }\n    let data = {device: this.deviceDTO};\n\n    this.backendSrv.put(\"/api/plugin-proxy/kentik-app/api/v5/device/\" + this.deviceDTO.device_id, data)\n      .then(resp => {\n        if ('err' in resp) {\n          this.alertSrv.set(\"Device Update failed.\", resp.err, 'error');\n        } else {\n          this.alertSrv.set(\"Device Updated.\", this.deviceDTO.device_name, 'success', 3000);\n          return this.getDevice(this.deviceDTO.device_id);\n        }\n      }, error => {\n        if ('error' in error.data) {\n          this.alertSrv.set(\"Device Update failed.\", error.data.error, 'error');\n        } else {\n          this.alertSrv.set(\"Device Update failed.\", error, 'error');\n        }\n      });\n  }\n}\n\nDeviceDetailsCtrl.templateUrl = 'components/device_details.html';\n"]}