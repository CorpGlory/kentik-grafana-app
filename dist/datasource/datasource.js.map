{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import {metricList, unitList} from './metric_def';\nimport _ from 'lodash';\nimport TableModel from 'app/core/table_model';\n\nclass KentikDatasource {\n\n  constructor(instanceSettings, backendSrv, templateSrv)  {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  interpolateDeviceField(value, variable) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    return value.join(',');\n  }\n\n  query(options) {\n    if (!options.targets || options.targets.length === 0) {\n      return Promise.resolve({data: []});\n    }\n\n    var target = options.targets[0];\n    var deviceNames = this.templateSrv.replace(target.device, options.scopedVars, this.interpolateDeviceField.bind(this));\n\n    var query = {\n      version: \"2.01\",\n      query: {\n        device_name: deviceNames,\n        time_type: 'fixed', // or fixed\n        lookback_seconds: 3600,\n        starting_time: options.range.from.utc().format(\"YYYY-MM-DD HH:mm:ss\"),\n        ending_time: options.range.to.utc().format(\"YYYY-MM-DD HH:mm:ss\"),\n        metric: this.templateSrv.replace(target.metric),\n        fast_data: \"Auto\", // or Fast or Full\n        units: this.templateSrv.replace(target.unit)\n      },\n      filterSettings: {\n        connector: 'All',\n        filterString: '',\n        filterGroups: []\n      }\n    };\n\n    var endpoint = 'timeSeriesData';\n    if (target.mode === 'table') {\n      endpoint = 'topXData';\n    }\n\n    return this.backendSrv.datasourceRequest({\n      method: 'POST',\n      url: 'api/plugin-proxy/kentik-app/api/v4/dataExplorer/' + endpoint,\n      data: query\n    }).then(this.processResponse.bind(this, query, endpoint, options));\n  }\n\n  processResponse(query, endpoint, options, data) {\n    if (!data.data) {\n      return Promise.reject({message: 'no kentik data'});\n    }\n\n    var rows = data.data;\n    if (rows.length === 0) {\n      return [];\n    }\n\n    var metricDef = _.findWhere(metricList, {value: query.query.metric});\n    var unitDef = _.findWhere(unitList, {value: query.query.units});\n\n    if (endpoint === 'topXData') {\n      return this.processTopXData(rows, metricDef, unitDef);\n    } else {\n      return this.processTimeSeries(rows, metricDef, unitDef, options);\n    }\n  }\n\n  processTimeSeries(rows, metricDef, unitDef, options) {\n    var seriesList = {};\n    var endIndex = rows.length;\n\n    // if time range is to now ignore last data point\n    if (options.rangeRaw.to === 'now') {\n      endIndex = endIndex - 1;\n    }\n\n    for (var i = 0; i < endIndex; i++) {\n      var row = rows[i];\n      var value = row[unitDef.field];\n      var seriesName = row[metricDef.field];\n      var series = seriesList[seriesName];\n\n      if (!series) {\n        series = seriesList[seriesName] = {\n          target: seriesName,\n          datapoints: [],\n          unit: unitDef.gfUnit,\n          axisLabel: unitDef.gfAxisLabel\n        };\n      }\n\n      if (unitDef.transform) {\n        value = unitDef.transform(value, row);\n      }\n\n      var time = new Date(row.i_start_time).getTime();\n      series.datapoints.push([value, time]);\n    }\n\n    // turn seriesList hash to array\n    return { data: _.map(seriesList, value => value) };\n  }\n\n  processTopXData(rows, metricDef, unitDef) {\n    var table = new TableModel();\n\n    table.columns.push({text: metricDef.text});\n\n    for (let col of unitDef.tableFields) {\n      table.columns.push({text: col.text});\n    }\n\n    for (let row of rows) {\n      var value = row[unitDef.field];\n      var seriesName = row[metricDef.field];\n\n      if (unitDef.transform) {\n        value = unitDef.transform(value, row);\n      }\n\n      var values = [seriesName];\n      for (let col of unitDef.tableFields) {\n        var val = row[col.field];\n        if (_.isString(val)) {\n          val = parseFloat(val);\n        }\n        if (unitDef.transform) {\n          val = unitDef.transform(value, row);\n        }\n        values.push(val);\n      }\n\n      table.rows.push(values);\n    }\n\n    return {data: [table]};\n  }\n\n  metricFindQuery(query) {\n    if (query === 'metrics()') {\n      return Promise.resolve(metricList);\n    }\n    if (query === 'units()') {\n      return Promise.resolve(unitList);\n    }\n\n    return this.backendSrv.datasourceRequest({\n      method: 'GET',\n      url: 'api/plugin-proxy/kentik-app/api/v1/device/list',\n    }).then(res => {\n      if (!res.data || !res.data.device) {\n        return [];\n      }\n\n      return res.data.device.map(device => {\n        return {text: device.device_name, value: device.device_name};\n      });\n    });\n  }\n}\n\nexport {KentikDatasource};\n"]}