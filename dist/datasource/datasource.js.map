{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["\nclass KentikDatasource {\n\n  constructor(instanceSettings, backendSrv, templateSrv)  {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  getTimeFilter(range) {\n    var timeFilter = 'ctimestamp > ' + (range.from.valueOf() / 1000).toFixed(0);\n    timeFilter += ' OR ctimestamp < ' + (range.to.valueOf() / 1000).toFixed(0);\n    return timeFilter;\n  }\n\n  query(options) {\n    if (!options.targets || options.targets.length === 0) {\n      return Promise.resolve({data: []});\n    }\n\n    var target = options.targets[0];\n\n    var query = {\n      version: \"2.01\",\n      query: {\n        device_name: this.templateSrv.replace(target.device),\n        time_type: 'relative', // or fixed\n        lookback_seconds: 3600,\n        starting_time: null,\n        ending_time: null,\n        metric: this.templateSrv.replace(target.metric),\n        fast_data: \"Auto\", // or Fast or Full\n        // device_type: 'router', // or host,\n      },\n      filterSettings: {\n        connector: 'All',\n        filterString: '',\n        filterGroups: []\n      }\n    };\n    console.log('Kentik query: ', query);\n\n    return this.backendSrv.datasourceRequest({\n      method: 'POST',\n      url: 'api/plugin-proxy/kentik-app/api/v4/dataExplorer/timeSeriesData',\n      data: query\n    }).then(this.processResponse.bind(this, query));\n  }\n\n  processResponse(query, data) {\n    if (!data.data) {\n      return Promise.reject({message: 'no kentik data'});\n    }\n\n    var rows = data.data;\n    if (rows.length === 0) {\n      return [];\n    }\n\n    console.log('kentik response', rows);\n    var seriesList = [];\n    var series = {target: query.query.metric, datapoints: []};\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      var value = row.f_sum_both_bytes;\n      var time = new Date(row.i_start_time).getTime();\n      series.datapoints.push([value, time]);\n    }\n\n    seriesList.push(series);\n    return {data: seriesList};\n  }\n\n  getMetricList() {\n    return Promise.resolve([\n        \"Traffic\" ,\n        \"Geography_src\",\n        \"src_geo_region\",\n        \"src_geo_city\",\n        \"AS_src\",\n        \"InterfaceID_src\",\n        \"Port_src\",\n        \"VLAN_src\",\n        \"IP_src\",\n        \"src_route_prefix_len\",\n        \"src_route_length\",\n        \"src_bgp_community\",\n        \"src_bgp_aspath\",\n        \"src_nexthop_ip\",\n        \"src_nexthop_asn\",\n        \"src_second_asn\",\n        \"src_third_asn\",\n        \"src_proto_port\",\n        \"TopFlow\",\n        \"Proto\",\n        \"InterfaceTopTalkers\",\n        \"PortPortTalkers\",\n        \"RegionTopTalkers\",\n        \"TopFlowsIP\",\n        \"ASTopTalkers\",\n        \"TOS\",\n        \"Geography_dst\",\n        \"dst_geo_region\",\n        \"dst_geo_city\",\n        \"AS_dst\",\n        \"InterfaceID_dst\",\n        \"Port_dst\",\n        \"VLAN_dst\",\n        \"IP_dst\",\n        \"dst_route_prefix_len\",\n        \"dst_route_length\",\n        \"dst_bgp_community\",\n        \"dst_bgp_aspath\",\n        \"dst_nexthop_ip\",\n        \"dst_nexthop_asn\",\n        \"dst_second_asn\",\n        \"dst_third_asn\",\n        \"dst_proto_port\"\n          ].map(value => {\n            return {text: value, value: value};\n          }));\n  }\n\n  metricFindQuery(query) {\n    if (query === 'metrics()') {\n      return this.getMetricList();\n    }\n\n    return this.backendSrv.datasourceRequest({\n      method: 'GET',\n      url: 'api/plugin-proxy/kentik-app/api/v1/device/list',\n    }).then(res => {\n      if (!res.data || !res.data.device) {\n        return [];\n      }\n\n      return res.data.device.map(device => {\n        return {text: device.device_name, value: device.device_name};\n      });\n    });\n  }\n}\n\nexport {KentikDatasource};\n"]}