{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCACM;AACJ,iBADI,gBACJ,CAAY,gBAAZ,EAA8B,UAA9B,EAA0C,EAA1C,EAA+C;gCAD3C,kBAC2C;;AAC7C,eAAK,gBAAL,GAAwB,gBAAxB,CAD6C;AAE7C,eAAK,UAAL,GAAkB,UAAlB,CAF6C;AAG7C,eAAK,EAAL,GAAU,EAAV,CAH6C;SAA/C;;qBADI;;wCAOU,OAAO;AACnB,gBAAI,aAAa,kBAAkB,CAAC,MAAM,IAAN,CAAW,OAAX,KAAuB,IAAvB,CAAD,CAA8B,OAA9B,CAAsC,CAAtC,CAAlB,CADE;AAEnB,0BAAc,sBAAsB,CAAC,MAAM,EAAN,CAAS,OAAT,KAAqB,IAArB,CAAD,CAA4B,OAA5B,CAAoC,CAApC,CAAtB,CAFK;AAGnB,mBAAO,UAAP,CAHmB;;;;gCAMf,SAAS;AACb,gBAAI,QAAQ,QAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CADC;AAEb,oBAAQ,MAAM,OAAN,CAAc,aAAd,EAA6B,KAAK,aAAL,CAAmB,QAAQ,KAAR,CAAhD,CAAR,CAFa;;AAIb,oBAAQ,GAAR,CAAY,gBAAZ,EAA8B,KAA9B,EAJa;AAKb,mBAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAkC;AACvC,sBAAQ,MAAR;AACA,mBAAK,uCAAL;AACA,oBAAM,EAAC,GAAG,KAAH,EAAP;aAHK,EAIJ,IAJI,CAIC,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAJD,CAAP,CALa;;;;0CAYC,MAAM;AACpB,gBAAI,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,GAAV,EAAe;AAC9B,qBAAO,KAAK,EAAL,CAAQ,MAAR,CAAe,EAAC,SAAS,KAAK,IAAL,CAAU,GAAV,EAAzB,CAAP,CAD8B;aAAhC;;AAIA,gBAAI,OAAO,KAAK,IAAL,CAAU,IAAV,CALS;;AAOpB,gBAAI,KAAK,MAAL,KAAgB,CAAhB,EAAmB;AACrB,qBAAO,EAAP,CADqB;aAAvB;;AAIA,gBAAI,aAAa,EAAb,CAXgB;AAYpB,gBAAI,WAAW,KAAK,CAAL,CAAX,CAZgB;;AAcpB,iBAAK,IAAI,IAAJ,IAAY,QAAjB,EAA2B;AACzB,kBAAI,SAAS,YAAT,EAAuB;AACzB,yBADyB;eAA3B;;AAIA,kBAAI,SAAS,cAAT,CAAwB,IAAxB,CAAJ,EAAmC;AACjC,2BAAW,IAAX,CAAgB,EAAC,YAAY,EAAZ,EAAgB,QAAQ,IAAR,EAAjC,EADiC;eAAnC;aALF;;AAUA,iBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,GAAjC,EAAsC;AACpC,kBAAI,MAAM,KAAK,CAAL,CAAN,CADgC;AAEpC,mBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,MAAX,EAAmB,GAAvC,EAA4C;AAC1C,oBAAI,QAAQ,WAAW,CAAX,CAAR,CADsC;AAE1C,oBAAI,QAAQ,SAAS,IAAI,MAAM,MAAN,CAAb,CAAR,CAFsC;AAG1C,oBAAI,OAAO,IAAI,UAAJ,GAAiB,IAAjB,CAH+B;AAI1C,sBAAM,UAAN,CAAiB,IAAjB,CAAsB,CAAC,KAAD,EAAQ,IAAR,CAAtB,EAJ0C;AAK1C,wBAAQ,GAAR,CAAY,aAAZ,EAA2B,KAA3B,EAAkC,IAAlC,EAL0C;eAA5C;aAFF;;AAWA,mBAAO,EAAC,MAAM,UAAN,EAAR,CAnCoB;;;;eAzBlB;;;kCAgEE","file":"datasource.js","sourcesContent":["\nclass KentikDatasource {\n  constructor(instanceSettings, backendSrv, $q)  {\n    this.instanceSettings = instanceSettings;\n    this.backendSrv = backendSrv;\n    this.$q = $q;\n  }\n\n  getTimeFilter(range) {\n    var timeFilter = 'ctimestamp > ' + (range.from.valueOf() / 1000).toFixed(0);\n    timeFilter += ' OR ctimestamp < ' + (range.to.valueOf() / 1000).toFixed(0);\n    return timeFilter;\n  }\n\n  query(options) {\n    var query = options.targets[0].target;\n    query = query.replace('$timeFilter', this.getTimeFilter(options.range));\n\n    console.log('Kentik query: ', query);\n    return this.backendSrv.datasourceRequest({\n      method: 'POST',\n      url: 'api/plugin-proxy/kentik-app/api/query',\n      data: {q: query}\n    }).then(this.processResponse.bind(this));\n  }\n\n  processResponse(data) {\n    if (data.data && data.data.err) {\n      return this.$q.reject({message: data.data.err});\n    }\n\n    var rows = data.data.data;\n\n    if (rows.length === 0) {\n      return [];\n    }\n\n    var seriesList = [];\n    var firstRow = rows[0];\n\n    for (var prop in firstRow) {\n      if (prop === 'ctimestamp') {\n        continue;\n      }\n\n      if (firstRow.hasOwnProperty(prop)) {\n        seriesList.push({datapoints: [], target: prop});\n      }\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      for (var y = 0; y < seriesList.length; y++) {\n        var serie = seriesList[y];\n        var value = parseInt(row[serie.target]);\n        var time = row.ctimestamp * 1000;\n        serie.datapoints.push([value, time]);\n        console.log('add value: ', value, time);\n      }\n    }\n\n    return {data: seriesList};\n  }\n}\n\nexport {KentikDatasource};\n"]}