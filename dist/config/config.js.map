{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass KentikConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (!this.appModel.jsonData) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.secureJsonData) {\n      this.appModel.secureJsonData = {};\n    }\n    this.apiValidated = false;\n    this.apiError = false;\n    if (this.appModel.enabled && this.appModel.jsonData.tokenSet) {\n      this.validateApiConnection();\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.token)  {\n      this.appModel.jsonData.tokenSet = true;\n    }\n\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    var self = this;\n    return this.validateApiConnection().then(() => {\n      return self.appEditCtrl.importDashboards().then(() => {\n        return {\n          url: \"dashboard/db/kentik-home\",\n          message: \"Kentik Connect Pro app installed!\"\n        };\n      });\n    });\n  }\n\n  // make sure that we can hit the Kentik API.\n  validateApiConnection() {\n    var self = this;\n    var promise = this.backendSrv.get('/api/plugin-proxy/kentik-app/api/v1/user/list');\n    promise.then(() => {\n      self.apiValidated = true;\n    }, () => {\n      self.apiValidated = false;\n      self.apiError = true;\n    });\n    return promise;\n  }\n\n  reset() {\n    this.appModel.jsonData.email = '';\n    this.appModel.jsonData.tokenSet = false;\n    this.appModel.secureJsonData = {};\n    this.apiValidated = false;\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundKentic = false;\n      _.forEach(results, function(ds) {\n        if (foundKentic) { return; }\n        if (ds.name === \"kentik\") {\n          foundKentic = true;\n        }\n      });\n      var promises = [];\n      if (!foundKentic) {\n        // create datasource.\n        var kentik = {\n          name: 'kentik',\n          type: 'kentik-ds',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', kentik));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nKentikConfigCtrl.template = configTemplate;\n\nexport {\n  KentikConfigCtrl as ConfigCtrl\n};\n\n"]}